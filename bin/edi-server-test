#!/usr/bin/env python3

# Copyright 2016 John Reese
# Licensed under the MIT license

import asyncio
import signal
import websockets


async def mirror(websocket, path):
    print('connection opened')
    while True:
        try:
            msg = await websocket.recv()
            print('received "%s"' % msg)
            await websocket.send(msg)

        except websockets.exceptions.ConnectionClosed:
            print('connection closed')
            return


def stop():
    print('stopping')
    asyncio.get_event_loop().stop()


print('listening')
server = websockets.serve(mirror, 'localhost', 2345)

loop = asyncio.get_event_loop()
loop.add_signal_handler(signal.SIGINT, stop)
loop.run_until_complete(server)
loop.run_forever()
